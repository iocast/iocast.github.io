<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>iocast</title><link href="/" rel="alternate"></link><link href="/feeds/miscellaneous.atom.xml" rel="self"></link><id>/</id><updated>2013-10-08T00:00:00+02:00</updated><entry><title>Creating your own blog using github pages, jekyll and travis</title><link href="/blog/2013/10/08-githup-pages-with-jekyll-and-travis.html" rel="alternate"></link><updated>2013-10-08T00:00:00+02:00</updated><author><name>iocast</name></author><id>tag:,2013-10-08:blog/2013/10/08-githup-pages-with-jekyll-and-travis.html</id><summary type="html">&lt;p&gt;Github offers at the time of writing three different types of pages: for &lt;a href="https://help.github.com/articles/user-organization-and-project-pages" title="Github Pages (Help)"&gt;users, organizations and projects&lt;/a&gt;. For the users and organizations the &lt;code&gt;master&lt;/code&gt; branch is going to be used to deploy as static web page. For projects, means in a repository which is not called &lt;code&gt;username.github.io&lt;/code&gt;, a subpath of the user pages would be created &lt;code&gt;username.github.io/projectname&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Hence this post is going to discuss the a simple workflow using &lt;a href="http://github.com/" title="Github"&gt;Github's&lt;/a&gt; user pages, &lt;a href="http://jekyllrb.com" title="Jekyll"&gt;jekyll&lt;/a&gt; as blog and pseudo dynamic page, &lt;a href="http://travis-ci.org" title="Travis CI"&gt;travis&lt;/a&gt; as our continuous integration solution for deployment purposes.&lt;/p&gt;
&lt;h2&gt;Github&lt;/h2&gt;
&lt;p&gt;First setup a new user page on Github using for example the page generator or simply setting up a new repository called &lt;code&gt;username.github.io&lt;/code&gt;. Github will automatically create a new &lt;code&gt;master&lt;/code&gt; branch which is used for deploying the content to the web server. In our case, we need to have a separate branch for our blog which is setup using &lt;a href="http://jekyllrb.com" title="Jekyll"&gt;jekyll&lt;/a&gt;. Therefore create a new branch e.g. called &lt;code&gt;develop&lt;/code&gt; as follow&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Creates our branch, without any parents (it&amp;#39;s an orphan!)&lt;/span&gt;
git checkout --orphan develop
&lt;span class="c"&gt;# Remove all files from the old working tree&lt;/span&gt;
git rm -rf .

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;My GitHub Page&amp;quot;&lt;/span&gt; &amp;gt; index.html
git add index.html
git commit -a -m &lt;span class="s2"&gt;&amp;quot;First pages commit&amp;quot;&lt;/span&gt;
git push origin develop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we are ready to add our &lt;a href="http://jekyllrb.com" title="Jekyll"&gt;jekyll&lt;/a&gt; page to this &lt;code&gt;develop&lt;/code&gt; branch.&lt;/p&gt;
&lt;h2&gt;Jekyll&lt;/h2&gt;
&lt;p&gt;Now that we have a &lt;code&gt;master&lt;/code&gt; and &lt;code&gt;develop&lt;/code&gt; branch, former for the &lt;a href="http://jekyllrb.com" title="Jekyll"&gt;jekyll&lt;/a&gt; compilation and later for your source, we can setup our blog. As described in the &lt;a href="http://jekyllrb.com/docs/home/" title="Jekyll Documentation"&gt;jekyll documentation&lt;/a&gt; we need to have at least a &lt;code&gt;_layouts&lt;/code&gt; directory for the templates that wrap posts, a &lt;code&gt;_posts&lt;/code&gt; for dynamic content and the rest of html and other files for you layout.&lt;/p&gt;
&lt;p&gt;In addition we need to setup a &lt;code&gt;_config.yml&lt;/code&gt; file to tell &lt;a href="http://jekyllrb.com" title="Jekyll"&gt;jekyll&lt;/a&gt; the compilation options. A example could look like the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;destination&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;./_site&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;lsi&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;         &lt;span class="l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;pygments&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;    &lt;span class="l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;markdown&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;    &lt;span class="l-Scalar-Plain"&gt;rdiscount&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;permalink&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;   &lt;span class="l-Scalar-Plain"&gt;date&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;rdiscount&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;extensions&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;smart&lt;/span&gt;&lt;span class="p-Indicator"&gt;]&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;exclude&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Gemfile&amp;#39;&lt;/span&gt;&lt;span class="p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Gemfile.lock&amp;#39;&lt;/span&gt;&lt;span class="p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Rakefile&amp;#39;&lt;/span&gt;&lt;span class="p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;README.md&amp;#39;&lt;/span&gt;&lt;span class="p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;update-gh-pages.sh&amp;#39;&lt;/span&gt;&lt;span class="p-Indicator"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Travis CI&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://travis-ci.org" title="Travis CI"&gt;Travis&lt;/a&gt; is used to automatically deploy the &lt;code&gt;develop&lt;/code&gt; branch and push the result of the &lt;code&gt;jekyll build&lt;/code&gt; output to the &lt;code&gt;master&lt;/code&gt; branch which the would be published to the Github pages.&lt;/p&gt;
&lt;p&gt;For that we need first to get &lt;a href="http://travis-ci.org" title="Travis CI"&gt;travis&lt;/a&gt; access to our Github repository. If you do not have a &lt;a href="http://travis-ci.org" title="Travis CI"&gt;travis&lt;/a&gt; account register one on the homepage. On The &lt;a href="http://travis-ci.org" title="Travis CI"&gt;travis&lt;/a&gt; homepage go to the account settings and get access to the appropriate repository like in the image below:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Travis Repository Access" src="/assets/blog/travis_repository_access.png" title="Travis Repository Access" /&gt;&lt;/p&gt;
&lt;p&gt;The next step is to configure the build process. For that create a new file called &lt;code&gt;.travis.yml&lt;/code&gt; in the root directory of the &lt;code&gt;develop&lt;/code&gt; branch and add the &lt;code&gt;master&lt;/code&gt; branch to the blacklist and the &lt;code&gt;develop&lt;/code&gt; branch to the whitelist.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;language&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;ruby&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;rvm&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;1.9.3&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;branches&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;except&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;master&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;branches&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;only&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;develop&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;script&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;rake travis&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see in the &lt;code&gt;.travis.yml&lt;/code&gt; file the &lt;a href="http://jekyllrb.com" title="Jekyll"&gt;jekyll&lt;/a&gt; deployment starts with the command &lt;code&gt;rake travis&lt;/code&gt; which is implemented in the &lt;code&gt;Rakefile&lt;/code&gt; file which uses the &lt;code&gt;Gemfile&lt;/code&gt; for ruby library dependencies. So create the files &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Rakefile&lt;/code&gt; in the root directory of the &lt;code&gt;develop&lt;/code&gt; branch.&lt;/p&gt;
&lt;p&gt;For the above &lt;code&gt;_config.yml&lt;/code&gt; configuration add the following RubyGem dependencies to the &lt;code&gt;Gemfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://rubygems.org&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jekyll&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rdiscount&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;redcarpet&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For &lt;a href="http://travis-ci.org" title="Travis CI"&gt;travis&lt;/a&gt; deployment add the following task to the &lt;code&gt;Rakefile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#!/usr/bin/env rake&lt;/span&gt;

&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ss"&gt;:travis&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="nb"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;jekyll build&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lastly we need to create a &lt;code&gt;bash&lt;/code&gt; script to push the compiled &lt;a href="http://jekyllrb.com" title="Jekyll"&gt;jekyll&lt;/a&gt; page to the &lt;code&gt;master&lt;/code&gt; branch. For that authorize &lt;a href="http://travis-ci.org" title="Travis CI"&gt;travis&lt;/a&gt; to do commits and pushed as follow:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;curl -X POST -u &amp;lt;your_github_username&amp;gt; -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; -d &lt;span class="s2"&gt;&amp;quot;{\&amp;quot;scopes\&amp;quot;:[\&amp;quot;public_repo\&amp;quot;],\&amp;quot;note\&amp;quot;:\&amp;quot;token for pushing from travis\&amp;quot;}&amp;quot;&lt;/span&gt; https://api.github.com/authorizations
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and copy the &lt;code&gt;token&lt;/code&gt; key from the json result.&lt;/p&gt;
&lt;p&gt;Now install the travis gem, encrypt the values of environment variables and add it to the &lt;code&gt;.tavis.yml&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gem install travis
travis encrypt -r &amp;lt;user&amp;gt;/&amp;lt;repository&amp;gt; &lt;span class="nv"&gt;GH_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;token&amp;gt; --add env.global
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lastly you need to create a bash file which pushes the update to he &lt;code&gt;master&lt;/code&gt; branch using the &lt;code&gt;GH_TOKEN&lt;/code&gt; which was encrypted before and need to be registered in the &lt;code&gt;.travis.yml&lt;/code&gt; as &lt;code&gt;after_success&lt;/code&gt; task:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$TRAVIS_PULL_REQUEST&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;false&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;Starting to update master\n&amp;quot;&lt;/span&gt;

  cp -R _site &lt;span class="nv"&gt;$HOME&lt;/span&gt;/_site

  &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;
  git config --global user.email &lt;span class="s2"&gt;&amp;quot;iocast@me.com&amp;quot;&lt;/span&gt;
  git config --global user.name &lt;span class="s2"&gt;&amp;quot;iocast&amp;quot;&lt;/span&gt;
  git clone --quiet --branch&lt;span class="o"&gt;=&lt;/span&gt;master https://&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GH_TOKEN&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;@github.com/iocast/iocast.github.io.git master &amp;gt; /dev/null

  &lt;span class="nb"&gt;cd &lt;/span&gt;master
  rm -rf ./*
  cp -Rf &lt;span class="nv"&gt;$HOME&lt;/span&gt;/_site/* .

  git add -f .
  git commit -m &lt;span class="s2"&gt;&amp;quot;Travis build $TRAVIS_BUILD_NUMBER pushed to master&amp;quot;&lt;/span&gt;
  git push -fq origin master &amp;gt; /dev/null

  &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;Done magic with coverage\n&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and add the following lines to the end of the &lt;code&gt;.travis.yml&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;after_success&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;./update-gh-pages.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="github"></category><category term="jekyll"></category><category term="travis"></category><category term="bash"></category><category term="continuous integration"></category></entry></feed>