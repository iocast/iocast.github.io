<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on think twice code once!</title>
    <link>https://iocast.github.io/tags/bash/</link>
    <description>Recent content in Bash on think twice code once!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>All rights reserved Â© 2018</copyright>
    <lastBuildDate>Thu, 17 Apr 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://iocast.github.io/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GitHub Pages for a repository compiling using Travis CI</title>
      <link>https://iocast.github.io/post/versioning/github-travis-addition/</link>
      <pubDate>Thu, 17 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://iocast.github.io/post/versioning/github-travis-addition/</guid>
      <description>First of all check if you have already a personal access token.
If not, you can follow these instructions
On Travis we need to grant access to the GitHub repository. Login to Travis and in your account settings under repositories you can enable a project.
The next thing is to generate a new secure string for your .travis.yml file. First we need to get the GitHub personal access token, which you generated beforehand.</description>
    </item>
    
    <item>
      <title>Mac OS X file server migration</title>
      <link>https://iocast.github.io/post/server-management/osx-file-server-migration/</link>
      <pubDate>Wed, 09 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://iocast.github.io/post/server-management/osx-file-server-migration/</guid>
      <description>Managing a OS X server is sometimes a pain, when it comes to manage ACL permissions on the file system using OS X Server share point application. For example if you want to migrate from one file server to another you need to define all shares and ACLs again or if you want to propagate permissions on a share with explicit ACLs on a sub-directory you are going to overwrite these explicit ACLs.</description>
    </item>
    
    <item>
      <title>Creating your own blog using github pages, jekyll and travis</title>
      <link>https://iocast.github.io/post/miscellaneous/github-jekyll-travis/</link>
      <pubDate>Tue, 08 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://iocast.github.io/post/miscellaneous/github-jekyll-travis/</guid>
      <description>Github offers at the time of writing three different types of pages: for users, organizations and projects. For the users and organizations the master branch is going to be used to deploy as static web page. For projects, means in a repository which is not called username.github.io, a subpath of the user pages would be created username.github.io/projectname.
Hence this post is going to discuss the a simple workflow using Github&amp;rsquo;s user pages, jekyll as blog and pseudo dynamic page, travis as our continuous integration solution for deployment purposes.</description>
    </item>
    
    <item>
      <title>Tunneling over an intermediate to overcome demilitarized zone</title>
      <link>https://iocast.github.io/post/miscellaneous/tunneling-over-an-intermediate/</link>
      <pubDate>Sat, 03 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://iocast.github.io/post/miscellaneous/tunneling-over-an-intermediate/</guid>
      <description>Source code: shell script
Tunneling over a intermediar is often used to connect to a server which is e.g. in a DMZ. In the following case we have a server that is the company network and does only allow connections on port 22 from the DMZ. Means the server cannot be connection over the internet. In addition, we have a server in the DMZ which allows connection on port 22 from outside (internet) and can connect to the company network over port 22.</description>
    </item>
    
  </channel>
</rss>