<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>think twice code once!</title>
    <link>http://iocast.github.io/</link>
    <description>Recent content on think twice code once!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>All rights reserved Â© 2018</copyright>
    <lastBuildDate>Mon, 01 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://iocast.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MongoDB</title>
      <link>http://iocast.github.io/cheatsheet/mongodb/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/mongodb/</guid>
      <description>User Management Create open the MongoDB shell
$ mongo -u &amp;lt;user&amp;gt; -p &amp;lt;password&amp;gt; --authenticationDatabase &amp;lt;db&amp;gt; Optional parameters
 -u Username -p Password --authenticationDatabase Check user against this database  and create a user.
&amp;gt; db.createUser({ ... &amp;#34;user&amp;#34;: &amp;#34;admin&amp;#34;, ... &amp;#34;pwd&amp;#34;: &amp;#34;password&amp;#34;, ... &amp;#34;roles&amp;#34;: [ ... {&amp;#34;role&amp;#34;: &amp;#34;dbOwner&amp;#34;, &amp;#34;db&amp;#34;: &amp;#34;admin&amp;#34; }, ... {&amp;#34;role&amp;#34;: &amp;#34;userAdmin&amp;#34;, &amp;#34;db&amp;#34;: &amp;#34;admin&amp;#34; }, ... {&amp;#34;role&amp;#34;: &amp;#34;userAdminAnyDatabase&amp;#34;, db: &amp;#34;admin&amp;#34; }, ... {&amp;#34;role&amp;#34;: &amp;#34;clusterAdmin&amp;#34;, &amp;#34;db&amp;#34;: &amp;#34;admin&amp;#34; }, ... {&amp;#34;role&amp;#34;: &amp;#34;dbAdminAnyDatabase&amp;#34;, db: &amp;#34;admin&amp;#34; }, .</description>
    </item>
    
    <item>
      <title>My new Server (Pine64) on armbian</title>
      <link>http://iocast.github.io/post/server/pine64/</link>
      <pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/post/server/pine64/</guid>
      <description>Installation I flashed the SD card using ETCHER with the latest Armbian without desktop.
Once ETCHER is done burning the image on the SD card, insert the card into the Pine64 and attach an ethernet cable. Then login to the system as root
$ ssh root@192.168.0.10 The default password is 1234. Only after the first login you are asked to change root&amp;rsquo;s password and to create a default user with sudo privilege.</description>
    </item>
    
    <item>
      <title>MacOS</title>
      <link>http://iocast.github.io/cheatsheet/macos/</link>
      <pubDate>Mon, 09 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/macos/</guid>
      <description> Finding Files sudo find / -iname &amp;#34;*search-string*&amp;#34; sudo find / -ipath &amp;#34;*search-string*&amp;#34; Network See which process is listen on a specific port
ps -eaf | grep `lsof -t -i:3000`</description>
    </item>
    
    <item>
      <title>npmjs</title>
      <link>http://iocast.github.io/cheatsheet/npmjs/</link>
      <pubDate>Fri, 10 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/npmjs/</guid>
      <description>Comands login open your shell and type
npm login follow the onscreen instructions
update verify that the &amp;quot;name&amp;quot;: &amp;quot;@username/package-name&amp;quot; and &amp;quot;version&amp;quot; is correct in your package.json file. Publish the package as follow
npm publish --access public prepublishOnly ensures that the library is always built before we publish to npm.
more flags here https://docs.npmjs.com/misc/scripts
needed dev libraries
babel-cli provides the command babel. babel-preset-env is the Babel preset we use for transpilation.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>http://iocast.github.io/contact/</link>
      <pubDate>Sun, 21 Feb 2016 15:22:59 -0500</pubDate>
      
      <guid>http://iocast.github.io/contact/</guid>
      <description>adsfdsaf dsaf</description>
    </item>
    
    <item>
      <title>Bash / Shell</title>
      <link>http://iocast.github.io/cheatsheet/bash/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/bash/</guid>
      <description>Programming / Snippets    Purpose Command     directory of the script DIR=&amp;quot;$( cd &amp;quot;$( dirname &amp;quot;${BASH_SOURCE[0]}&amp;quot; )&amp;quot; &amp;amp;&amp;amp; pwd )&amp;quot;    Arrays check string in array ... COMMANDS=(&amp;#34;install&amp;#34; &amp;#34;upgrade&amp;#34;) command=&amp;#34;install&amp;#34; ... if ! echo echo ${COMMANDS[@]} | grep -q \\${command}\\b then usage exit fi ... Platform Detection # Detect the platform (similar to $OSTYPE) OS=&amp;#34;`uname`&amp;#34; UNAME=&amp;#34;unknown&amp;#34; case $OS in &amp;#39;Linux&amp;#39;) OS=&amp;#39;linux&amp;#39; UNAME=&amp;#39;Linux&amp;#39; ;; &amp;#39;Darwin&amp;#39;) OS=&amp;#39;darwin&amp;#39; UNAME=&amp;#39;Darwin&amp;#39; ;; *) ;; esac Console / Script Handling Color and Style the Console Output # Black 0;30 Dark Gray 1;30 # Red 0;31 Light Red 1;31 # Green 0;32 Light Green 1;32 # Brown/Orange 0;33 Yellow 1;33 # Blue 0;34 Light Blue 1;34 # Purple 0;35 Light Purple 1;35 # Cyan 0;36 Light Cyan 1;36 # Light Gray 0;37 White 1;37 GREEN=&amp;#39;\033[0;32m&amp;#39; RED=&amp;#39;\033[0;31m&amp;#39; BLUE=&amp;#39;\033[0;34m&amp;#39; NC=&amp;#39;\033[0m&amp;#39; # No Color .</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>http://iocast.github.io/cheatsheet/git/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/git/</guid>
      <description>git submodule update --init Settings Username in a local git repo
git config user.name &amp;#34;iocast&amp;#34; git config user.email &amp;#34;iocast@me.com&amp;#34; or for global settings
git config --global user.name &amp;#34;iocast&amp;#34; git config --global user.email &amp;#34;iocast@me.com&amp;#34; General download from git repository (normally branch &amp;lsquo;master&amp;rsquo;)
git clone &amp;lt;remote_repo&amp;gt; download specific branch
git clone -b &amp;lt;branch&amp;gt; &amp;lt;remote_repo&amp;gt; commit changes (check if you are on the correct branch)
git commit -m &amp;#34;message&amp;#34; Push / Pull send branch to repository/server</description>
    </item>
    
    <item>
      <title>IRC</title>
      <link>http://iocast.github.io/cheatsheet/irc/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/irc/</guid>
      <description>User Register /msg NickServ register &amp;lt;password&amp;gt; &amp;lt;email&amp;gt; Login /msg nickserv identify &amp;lt;password&amp;gt; Administering Channel You cannot administer a channel until you become an operator with the op command. Only an operator can create other operators. If no operators are left in a channel, the channel can no longer be administered. You shouldn&amp;rsquo;t be operator any longer than you have to, as it creates an unhelpful class distinction among channel users and not knowing who is operator can help keep trolls from causing trouble.</description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>http://iocast.github.io/cheatsheet/linux/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/linux/</guid>
      <description>User &amp;amp; Group Management    Purpose Command     new group groupadd sambashare   new user useradd -m -g users -G sambashare -s /bin/bash unix_user   change password passwd unix_user   rename user usermod -l newUsername oldUsername and change home folder usermod -d /home/newHomeDir -m newUsername   change to root sudo -i   remove user deluser --remove-home username    User with sudo rights useradd --create-home --gid users --shell /bin/bash userName passwd userName visudo -f /etc/sudoers.</description>
    </item>
    
    <item>
      <title>Oracle VirtualBox</title>
      <link>http://iocast.github.io/cheatsheet/virtualbox/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/virtualbox/</guid>
      <description> VirtualBox Management This section describes to to use VBoxManage
** resizing your virtual disk**
&amp;#39;C:\Program Files\Oracle\VirtualBox\VBoxManage.exe&amp;#39; modifyhd &amp;#39;.\Windows.vdi&amp;#39; --resize 40000</description>
    </item>
    
    <item>
      <title>PostgreSQL</title>
      <link>http://iocast.github.io/cheatsheet/postgres/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/postgres/</guid>
      <description>Basics login as postgres use r
sudo su postgres - run sql command
psql -U postgres -c &amp;#34;&amp;lt;sql&amp;gt;&amp;#34; List lists all databases
psql --list Create create database
 -O owner -U username -E encoding -e echo --locale=&amp;lt;locale&amp;gt; (This is equivalent to specifying both --lc-collate and --lc-ctype) --lc-collate=&#39;&amp;lt;locale&amp;gt;&#39; collation order --lc-ctype=&#39;&amp;lt;locale&amp;gt;&#39; character classification -T template  createdb -U postgres &amp;lt;database&amp;gt; Drop dropdb -U &amp;lt;user&amp;gt; -h &amp;lt;host&amp;gt; -i -e &amp;lt;database&amp;gt; Log into database -W to force password prompt</description>
    </item>
    
    <item>
      <title>Powershell</title>
      <link>http://iocast.github.io/cheatsheet/powershell/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/powershell/</guid>
      <description>Desktop For all the command in this section I used command line prompt.
Sharing remove a network share
net use /delete &amp;lt;drive name or network path&amp;gt; Server For all the command below I used PowerShell.
Sharing list of all connected users
Get-SmbSession for command line use
net session closing a session can be done using the session id, computer name or user name as follow:
Close-SmbSession -SessionId 171798691989 Close-SmbSession âClientComputerName \\192.</description>
    </item>
    
    <item>
      <title>Python PyPi</title>
      <link>http://iocast.github.io/cheatsheet/python_pypi/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/python_pypi/</guid>
      <description> Comands registration python setup.py register update  bdist create a built (binary) distribution sdist create a source distribution (tarball, zip file, etc.)  python setup.py sdist upload configuration file is called .pypirc, is located in your home direve ~ and has the following structure
[distutils] index-servers = pypi other [pypi] repository: &amp;lt;repository-url&amp;gt; username: &amp;lt;username&amp;gt; password: &amp;lt;password&amp;gt; [other] repository: http://example.com/pypi username: &amp;lt;username&amp;gt; password: &amp;lt;password&amp;gt;</description>
    </item>
    
    <item>
      <title>SAP Transactions</title>
      <link>http://iocast.github.io/cheatsheet/sap_transactions/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/sap_transactions/</guid>
      <description>Development    Trx Code Purpose     /h Dynpro debugging   /ha ABAP debugging   /hs System debugging   SAT Profiling    Table Management    Trx Code Purpose     SM30 Table view (customizing / transport )   SE14 Delete table entries    Services (Gateway / OData)    Trx Code Purpose     SEGW SAP Gateway Service Builder   /IWFND/ERROR_LOG SAP Gateway Error Log   /IWFND/MAINT_SERVICE Activate and Maintain Services   /IWFND/GW_CLIENT SAP Gateway Client   SXI_MONITOR XI: Message Monitoring   SXMB_MONI Integration Engine - Monitoring    Caches Open Transaction SE38 and the programming /UI2/INVALIDATE_CLIENT_CACHES for clearing the client caches or /UI2/INVALIDATE_GLOBAL_CACHES for the global UI2 caches.</description>
    </item>
    
    <item>
      <title>Sphinx</title>
      <link>http://iocast.github.io/cheatsheet/sphinx/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/cheatsheet/sphinx/</guid>
      <description>Errors ValueError: unknown locale: UTF-8 If you try to build your documentation (sphinx-build -b html -a . _build/) and get the following error
... File &amp;#34;.../virtualenv/publishing/lib/python2.7/locale.py&amp;#34;, line 443, in _parse_localename raise ValueError, &amp;#39;unknown locale: %s&amp;#39; % localename ValueError: unknown locale: UTF-8 then try the following. Add the the below lines to your $HOME/.bash_profile
export LC_ALL=en_US.UTF-8 export LANG=en_US.UTF-8 Do
source $HOME/.bash_profile and try it again. Or simply export the locale settings before running the sphinx-build.</description>
    </item>
    
    <item>
      <title>about</title>
      <link>http://iocast.github.io/about/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/about/</guid>
      <description>h2 text h2
h3 text h3</description>
    </item>
    
    <item>
      <title>My personal file server on a Cubox from SolidRun using Arch Linux</title>
      <link>http://iocast.github.io/post/server/cubox-fileserver-archlinux/</link>
      <pubDate>Sun, 30 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/post/server/cubox-fileserver-archlinux/</guid>
      <description>For my file server I have the following requirements:
 it should consume as less as possible electricity it should be very silent, means no active cooling the operation system should use OpenSSH  Thus, for the hardware I have decided to use a Cubox from SolidRun because it has a very good value for money. Notice that I use the first revision of the Cubox and not the Cubox-i serie.</description>
    </item>
    
    <item>
      <title>Javascript localization part 1</title>
      <link>http://iocast.github.io/post/web-application/javascript-internationalization-part1/</link>
      <pubDate>Mon, 21 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/post/web-application/javascript-internationalization-part1/</guid>
      <description>Take some seconds and thing about how you represent a date or number. Do you convert the object to a string and slices it at the needed position? Or do you extend the Date class and adds some new output representation functionality.
Since the ECMA-402 Standard, published on December 2012, you have some really great new functions which respects the locale settings of your environment.
Okey, lets take a step back.</description>
    </item>
    
    <item>
      <title>GitHub Pages for a repository compiling using Travis CI</title>
      <link>http://iocast.github.io/post/versioning/github-travis-addition/</link>
      <pubDate>Thu, 17 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/post/versioning/github-travis-addition/</guid>
      <description>First of all check if you have already a personal access token.
If not, you can follow these instructions
On Travis we need to grant access to the GitHub repository. Login to Travis and in your account settings under repositories you can enable a project.
The next thing is to generate a new secure string for your .travis.yml file. First we need to get the GitHub personal access token, which you generated beforehand.</description>
    </item>
    
    <item>
      <title>Joining a Active Directory on Linux - the easiest way!</title>
      <link>http://iocast.github.io/post/server-management/linux-join-ad/</link>
      <pubDate>Sat, 30 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/post/server-management/linux-join-ad/</guid>
      <description>The easiest way, at least for me, is to use the likewise-open package. You can find the official documentation here. Under Ubuntu you can simple install this package using apt-get.
apt-get install likewise-open Once you have installed it, you can join a Active Directory (AD) as follow.
domainjoin-cli join --ou Hosting/&amp;lt;path&amp;gt;/&amp;lt;to&amp;gt;/&amp;lt;your&amp;gt;/&amp;lt;organization-unit&amp;gt; &amp;lt;server&amp;gt; &amp;lt;login-user&amp;gt; where you need to define the path to your organization unit, which is displayed in the AD as a folder.</description>
    </item>
    
    <item>
      <title>Ubuntu 12.04, PGSQL 9.3, PostGIS 2.1 and PL/R against libgdal1h from scratch</title>
      <link>http://iocast.github.io/post/gis/ubuntu-postgresql-postgis-plr-libgdal1h/</link>
      <pubDate>Mon, 11 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/post/gis/ubuntu-postgresql-postgis-plr-libgdal1h/</guid>
      <description>Removing preinstalled packages First we need to check which PostgreSQL, PostGIS and GDAL versions are installed. To do so check your Debian package management system (dpkg).
dpkg -l | grep &amp;#39;postgres\|gdal&amp;#39; You should get a list like the following one:
ii libgdal-dev 1.10.0-1~precise1 Geospatial Data Abstraction Library - Development files ii libgdal1-dev 1.10.0-1~precise1 Geospatial Data Abstraction Library - Development files ii libgdal1h 1.10.0-1~precise1 Geospatial Data Abstraction Library ii postgresql-9.1 9.</description>
    </item>
    
    <item>
      <title>Python 2.7.x and mod_wsgi on a CentOS 6</title>
      <link>http://iocast.github.io/post/web-application/centos-python-modwsgi/</link>
      <pubDate>Wed, 16 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/post/web-application/centos-python-modwsgi/</guid>
      <description>When you have installed CentOS 6 using the minimal image we need first to do some preparation. Fist login into your system and enable your eth0 at startup.
vi /etc/sysconfig/network-scripts/ifcfg-eth0 and set ONBOOT to yes.
Getting Python 2.7.x The following explanations are based on a blog of Asim Teeshan and a post on Fire3Net.
First we need some development tools. Install the following once
yum install gcc make zlib-devel bzip2-devel openssl-devel Now download the latest 2.</description>
    </item>
    
    <item>
      <title>Setting up a QGIS server and PostGIS on CentOS 6</title>
      <link>http://iocast.github.io/post/gis/qgis-server-centos/</link>
      <pubDate>Sat, 12 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/post/gis/qgis-server-centos/</guid>
      <description>QGIS server provides a web map server (WMS) by simply copying a QGIS project int the server directory. If you want to depend on newer postgresql-libs you need first to install the desired version of PostgreSQL and PostGIS as described bellow.
PostgreSQL and PostGIS The following instructions are adapted from YUM installation - PostgreSQL wiki and UsersWikiuPostGIS20CentOS6pgdg - PostGIS.
Configuration Configure yum repository
vi /etc/yum.repos.d/CentOS-Base.repo and add the following excludes to base and updates sections:</description>
    </item>
    
    <item>
      <title>Mac OS X file server migration</title>
      <link>http://iocast.github.io/post/server-management/osx-file-server-migration/</link>
      <pubDate>Wed, 09 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/post/server-management/osx-file-server-migration/</guid>
      <description>Managing a OS X server is sometimes a pain, when it comes to manage ACL permissions on the file system using OS X Server share point application. For example if you want to migrate from one file server to another you need to define all shares and ACLs again or if you want to propagate permissions on a share with explicit ACLs on a sub-directory you are going to overwrite these explicit ACLs.</description>
    </item>
    
    <item>
      <title>Creating your own blog using github pages, jekyll and travis</title>
      <link>http://iocast.github.io/post/miscellaneous/github-jekyll-travis/</link>
      <pubDate>Tue, 08 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/post/miscellaneous/github-jekyll-travis/</guid>
      <description>Github offers at the time of writing three different types of pages: for users, organizations and projects. For the users and organizations the master branch is going to be used to deploy as static web page. For projects, means in a repository which is not called username.github.io, a subpath of the user pages would be created username.github.io/projectname.
Hence this post is going to discuss the a simple workflow using Github&amp;rsquo;s user pages, jekyll as blog and pseudo dynamic page, travis as our continuous integration solution for deployment purposes.</description>
    </item>
    
    <item>
      <title>Tunneling over an intermediate to overcome demilitarized zone</title>
      <link>http://iocast.github.io/post/miscellaneous/tunneling-over-an-intermediate/</link>
      <pubDate>Sat, 03 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>http://iocast.github.io/post/miscellaneous/tunneling-over-an-intermediate/</guid>
      <description>Source code: shell script
Tunneling over a intermediar is often used to connect to a server which is e.g. in a DMZ. In the following case we have a server that is the company network and does only allow connections on port 22 from the DMZ. Means the server cannot be connection over the internet. In addition, we have a server in the DMZ which allows connection on port 22 from outside (internet) and can connect to the company network over port 22.</description>
    </item>
    
  </channel>
</rss>