<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    
    <title>iocast - iocast.github.io</title>
    <link href="http://iocast.github.io/atom.xml" rel="self"/>
    <link href="http://iocast.github.io"/>
    <updated>2013-10-08T11:05:33+00:00</updated>
    <id>http://iocast.github.io/</id>
    <author>
        <name>iocast</name>
        <email>iocast@me.com</email>
    </author>
    
    
    <entry>
        <title>Mac OS X file server migration</title>
        <link href="http://iocast.github.io/blog/2013/10/09/osx-file-server-migration.html"/>
        <updated>2013-10-09T00:00:00+00:00</updated>
        <id>http://iocast.github.io/blog/2013/10/09/osx-file-server-migration</id>
        <content type="html">&lt;p&gt;Managing a OS X server is sometimes a pain, when it comes to manage ACL permissons on the file system using OS X Server share point application. For example if you want to migrate from one file server to another you need to define all shares and ACLs again or if you want to propagate permissons on a share with explicit ACLs on a sub-directory you are going to overwrite these explicit ACLs.&lt;/p&gt;

&lt;p&gt;So to solve these problems and many more I created a little bash script which is able to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sync files from a remote server using &lt;code&gt;rsync&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;changing the POSIX permissons on the local server after sync&lt;/li&gt;
&lt;li&gt;creating optionally a share point for each folder to be synced&lt;/li&gt;
&lt;li&gt;propagating ACLs on a share point or on a individual directory.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Each of these feature can be used indipendenly. For more information see the project description: &lt;a href=&quot;/projects/file-server-migration.html&quot;&gt;server migration tool&lt;/a&gt;&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>Creating your own blog using github pages, jekyll and travis</title>
        <link href="http://iocast.github.io/blog/2013/10/08/github-jekyll-travis.html"/>
        <updated>2013-10-08T00:00:00+00:00</updated>
        <id>http://iocast.github.io/blog/2013/10/08/github-jekyll-travis</id>
        <content type="html">&lt;p&gt;Github offers at the tme of writing three differnt types of pages: for &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages&quot; title=&quot;Github Pages (Help)&quot;&gt;users, organizations and projects&lt;/a&gt;. For th users and organizations the &lt;code&gt;master&lt;/code&gt; branch is going to be used to deploy as static web page. For projects, means in a repository which is not called &lt;code&gt;username.github.io&lt;/code&gt;, a subpath of the user pages would be created &lt;code&gt;username.github.io/projectname&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Hence this post is going to discuss the a simple workflow using &lt;a href=&quot;http://github.com/&quot; title=&quot;Github&quot;&gt;Github&amp;rsquo;s&lt;/a&gt; user pages, &lt;a href=&quot;http://jekyllrb.com&quot; title=&quot;Jekyll&quot;&gt;jekyll&lt;/a&gt; as blog and pseudo dynamic page, &lt;a href=&quot;http://travis-ci.org&quot; title=&quot;Travis CI&quot;&gt;travis&lt;/a&gt; as our continous integration solution for deployment purposes.&lt;/p&gt;

&lt;h2&gt;Github&lt;/h2&gt;

&lt;p&gt;First setup a new user page on Github using for example the page generator or simply setting up a new repository called &lt;code&gt;username.github.io&lt;/code&gt;. Github will automatically create a new &lt;code&gt;master&lt;/code&gt; branch which is used for deploying the content to the web server. In our case, we need to have a seperate branch for our blog which is setup using &lt;a href=&quot;http://jekyllrb.com&quot; title=&quot;Jekyll&quot;&gt;jekyll&lt;/a&gt;. Therefore create a new branch e.g. called &lt;code&gt;develop&lt;/code&gt; as follow&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Creates our branch, without any parents (it&amp;#39;s an orphan!)&lt;/span&gt;
git checkout --orphan develop
&lt;span class=&quot;c&quot;&gt;# Remove all files from the old working tree&lt;/span&gt;
git rm -rf .

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;My GitHub Page&amp;quot;&lt;/span&gt; &amp;gt; index.html
git add index.html
git commit -a -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;First pages commit&amp;quot;&lt;/span&gt;
git push origin develop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we are ready to add our &lt;a href=&quot;http://jekyllrb.com&quot; title=&quot;Jekyll&quot;&gt;jekyll&lt;/a&gt; page to this &lt;code&gt;develop&lt;/code&gt; branch.&lt;/p&gt;

&lt;h2&gt;Jekyll&lt;/h2&gt;

&lt;p&gt;Now that we have a &lt;code&gt;master&lt;/code&gt; and &lt;code&gt;develop&lt;/code&gt; branch, former for the &lt;a href=&quot;http://jekyllrb.com&quot; title=&quot;Jekyll&quot;&gt;jekyll&lt;/a&gt; compliation and later for your source, we can setup our blog. As described in the &lt;a href=&quot;http://jekyllrb.com/docs/home/&quot; title=&quot;Jekyll Documentation&quot;&gt;jekyll documentation&lt;/a&gt; we need to have at least a &lt;code&gt;_layouts&lt;/code&gt; directory for the templates that wrap posts, a &lt;code&gt;_posts&lt;/code&gt; for dynamic content and the rest of html and other files for you layout.&lt;/p&gt;

&lt;p&gt;In addition we need to setup a &lt;code&gt;_config.yml&lt;/code&gt; file to tell &lt;a href=&quot;http://jekyllrb.com&quot; title=&quot;Jekyll&quot;&gt;jekyll&lt;/a&gt; the compliation options. A example could look like the following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;destination&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;./_site&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;lsi&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;         &lt;span class=&quot;l-Scalar-Plain&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;pygments&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;rdiscount&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;l-Scalar-Plain&quot;&gt;date&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;rdiscount&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;extensions&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;smart&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;l-Scalar-Plain&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Gemfile&amp;#39;&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Gemfile.lock&amp;#39;&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Rakefile&amp;#39;&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;README.md&amp;#39;&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;update-gh-pages.sh&amp;#39;&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Travis CI&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://travis-ci.org&quot; title=&quot;Travis CI&quot;&gt;Travis&lt;/a&gt; is used to automatically deploy the &lt;code&gt;develop&lt;/code&gt; branch and push the result of the &lt;code&gt;jekyll build&lt;/code&gt; output to the &lt;code&gt;master&lt;/code&gt; branch which the would be published to the Github pages.&lt;/p&gt;

&lt;p&gt;For that we need first to get &lt;a href=&quot;http://travis-ci.org&quot; title=&quot;Travis CI&quot;&gt;travis&lt;/a&gt; access to our Github repository. If you do not have a &lt;a href=&quot;http://travis-ci.org&quot; title=&quot;Travis CI&quot;&gt;travis&lt;/a&gt; account register one on the homepage. On The &lt;a href=&quot;http://travis-ci.org&quot; title=&quot;Travis CI&quot;&gt;travis&lt;/a&gt; homepage go to the account settings and get access to the appropriate repository like in the image below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/travis_repository_access.png&quot; title=&quot;Travis Repository Access&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next step is to configure the build process. For that create a new file called &lt;code&gt;.travis.yml&lt;/code&gt; in the root directory of the &lt;code&gt;develop&lt;/code&gt; branch and add the &lt;code&gt;master&lt;/code&gt; branch to the blacklist and the &lt;code&gt;develop&lt;/code&gt; branch to the whitelist.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;ruby&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;1.9.3&lt;/span&gt;

&lt;span class=&quot;l-Scalar-Plain&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;master&lt;/span&gt;

&lt;span class=&quot;l-Scalar-Plain&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;develop&lt;/span&gt;

&lt;span class=&quot;l-Scalar-Plain&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;rake travis&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see in the &lt;code&gt;.travis.yml&lt;/code&gt; file the &lt;a href=&quot;http://jekyllrb.com&quot; title=&quot;Jekyll&quot;&gt;jekyll&lt;/a&gt; doployment starts with the command &lt;code&gt;rake travis&lt;/code&gt; which is implmented in the &lt;code&gt;Rakefile&lt;/code&gt; file which uses the &lt;code&gt;Gemfile&lt;/code&gt; for ruby libraray dependencies. So create the files &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Rakefile&lt;/code&gt; in the root directory of the &lt;code&gt;develop&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;For the above &lt;code&gt;_config.yml` configuration add the follwoing RubyGem dependencies to the&lt;/code&gt;Gemfile```:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://rubygems.org&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;jekyll&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rdiscount&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;redcarpet&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For &lt;a href=&quot;http://travis-ci.org&quot; title=&quot;Travis CI&quot;&gt;travis&lt;/a&gt; deployment add the following task to the &lt;code&gt;Rakefile&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env rake&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:travis&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;jekyll build&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lastly we need to create a &lt;code&gt;bash&lt;/code&gt; script to push the compiled &lt;a href=&quot;http://jekyllrb.com&quot; title=&quot;Jekyll&quot;&gt;jekyll&lt;/a&gt; page to the &lt;code&gt;master&lt;/code&gt; branch. For that authorize &lt;a href=&quot;http://travis-ci.org&quot; title=&quot;Travis CI&quot;&gt;travis&lt;/a&gt; to do commits and pushed as follow:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;curl -X POST -u &amp;lt;your_github_username&amp;gt; -H &lt;span class=&quot;s2&quot;&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; -d &lt;span class=&quot;s2&quot;&gt;&amp;quot;{\&amp;quot;scopes\&amp;quot;:[\&amp;quot;public_repo\&amp;quot;],\&amp;quot;note\&amp;quot;:\&amp;quot;token for pushing from travis\&amp;quot;}&amp;quot;&lt;/span&gt; https://api.github.com/authorizations
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and copy the &lt;code&gt;token&lt;/code&gt; key from the json result.&lt;/p&gt;

&lt;p&gt;Now install the travis gem, encrypt the values of environment variables and add it to the &lt;code&gt;.tavis.yml&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;gem install travis
travis encrypt -r &amp;lt;user&amp;gt;/&amp;lt;repository&amp;gt; &lt;span class=&quot;nv&quot;&gt;GH_TOKEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;token&amp;gt; --add env.global
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lastly you need to create a bash file which pushes the update to he &lt;code&gt;master&lt;/code&gt; branch using the &lt;code&gt;GH_TOKEN&lt;/code&gt; which was encrytped before and need to be registered in the &lt;code&gt;.travis.yml&lt;/code&gt; as &lt;code&gt;after_success&lt;/code&gt; task:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$TRAVIS_PULL_REQUEST&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;Starting to update master\n&amp;quot;&lt;/span&gt;

  cp -R _site &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/_site

  &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;
  git config --global user.email &lt;span class=&quot;s2&quot;&gt;&amp;quot;iocast@me.com&amp;quot;&lt;/span&gt;
  git config --global user.name &lt;span class=&quot;s2&quot;&gt;&amp;quot;iocast&amp;quot;&lt;/span&gt;
  git clone --quiet --branch&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;master https://&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GH_TOKEN&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;@github.com/iocast/iocast.github.io.git master &amp;gt; /dev/null

  &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;master
  cp -Rf &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/_site/* .

  git add -f .
  git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;Travis build $TRAVIS_BUILD_NUMBER pushed to master&amp;quot;&lt;/span&gt;
  git push -fq origin master &amp;gt; /dev/null

  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;Done magic with coverage\n&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and add the following lines to the end of the &lt;code&gt;.travis.yml&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;after_success&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;./update-gh-pages.sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



</content>
    </entry>
    
    
</feed>
